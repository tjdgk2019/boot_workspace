package com.kh.house.product.controller;

import java.io.File;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.kh.house.product.model.service.ProductService;
import com.kh.house.product.model.vo.Product;
import com.kh.house.product.model.vo.ResponseData;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RestController
@Slf4j
@RequestMapping("/product")
@RequiredArgsConstructor
@CrossOrigin("*")
public class ProductController {
	private final ProductService productService;
	
	@PostMapping
	public ResponseEntity<ResponseData> save(@RequestParam("img")MultipartFile img,
											 @RequestParam("product") String product) throws JsonMappingException, JsonProcessingException{
		//log.info("product Table에 Insert할 내용{}", product);
		//log.info("File Table에 Inset할 내용 : {}",img);
		Product house = new ObjectMapper().readValue(product, Product.class);
		house.setCreateDate(LocalDateTime.now());
		if(!img.getOriginalFilename().equals("")) {
			
		}
		
		
		return null;
	}
	
	public String saveFile(MultipartFile upfile) {
		String originName = upfile.getOriginalFilename();
		String ext = originName.substring(originName.lastIndexOf("."));
		String currentTime = new SimpleDateFormat("yyyyMMddHHmmss").format(new Data());
		int ranNum =(int)Math.random()*90000+10000;
		String changeName = "KH_"+currentTime+"_"+ranNum+ext;
		
		String absolutePath = new File("").getAbsolutePath()+"\\";
		String savePath ="images/";
		
	}
	
	
	
	
	
	
	
	
	
	
	/*
	@PostMapping
	public ResponseEntity<ResponseData> save(@RequestBody String data) throws JsonMappingException, JsonProcessingException{
		log.info("전달값 : {}",data);
		Product product = new ObjectMapper().readValue(data,Product.class);
		product.setCreateDate(LocalDateTime.now());
		product.setHouseNo(1);
		
		log.info("vo가공: {}",product);
		
		Product savedObj = productService.save(product);
		log.info("반환받은 product: {}", savedObj);
		
		return null;
	}
	
	@GetMapping
	public ResponseEntity<ResponseData> findAll(){
		
		List<Product> products = productService.findAll();
		
		ResponseData rd = ResponseData.builder()
									  .responseDate(products)
									  .build();
		
		return ResponseEntity.status(HttpStatus.OK).body(rd);
	}
	
	@GetMapping("/id")
	public ResponseEntity<ResponseData> findById(@PathVariable("id") int id){
		Optional<Product> product = productService.findById(id);
		Product searched = product.get();
		
		ResponseData rd= ResponseData.builder().responseDate(product).build();
		
		return ResponseEntity.ok(rd);
	}
	*/
	
	
}
